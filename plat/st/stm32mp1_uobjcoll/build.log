building stm32 collection...
uberspark staging switch stm32mp1 
uberspark >> enforcing verifiable object abstractions for commodity system software stacks
uberspark >> front-end tool
uberspark >> version: 6.0.0
uberspark >> website: https://uberspark.org
uberspark >> creator: amit vasudevan <amitvasudevan@acm.org>
uberspark >> 
uberspark >> Loading current configuration...uberspark >> config_ns_json_path=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/config/uberspark.json
[OK]
uberspark >> successfully switched to staging: 'stm32mp1'
uberspark uobjcoll build -v --platform=st --arch=armv8_32 --cpu=generic .
uberspark >> enforcing verifiable object abstractions for commodity system software stacks
uberspark >> front-end tool
uberspark >> version: 6.0.0
uberspark >> website: https://uberspark.org
uberspark >> creator: amit vasudevan <amitvasudevan@acm.org>
uberspark >> 
uberspark >> namespace root dir prefix=/home/yeeb16
uberspark >> staging dir prefix=/home/yeeb16/uberspark/staging/stm32mp1
uberspark >> Loading current configuration...uberspark >> config_ns_json_path=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/config/uberspark.json
[OK]
uberspark >> uobj collection build start...
uberspark >> uobj collection path ns=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjcoll/platform/st/stm32mp1
uberspark >> uobj collection uobjs=1
uberspark >> intrauobjcoll sentinels=1
uberspark >> uobjcoll_public_methods sentinels=1
uberspark >> create_sentinels_hashtbl: total unique uobjcoll_public_methods sentinels=1
uberspark >> sentinel_mf_filename=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/sentinels/inter-uobjcoll/armv8_32/generic/generic/any/call/uberspark.json
uberspark >> create_sentinels_hashtbl: adding key=generic/generic/any/call
uberspark >> create_sentinels_hashtbl: total unique uobjcoll_public_methods sentinels=1
uberspark >> sentinel_mf_filename=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/sentinels/intra-uobjcoll/armv8_32/generic/generic/any/call/uberspark.json
uberspark >> create_sentinels_hashtbl: adding key=generic/generic/any/call
uberspark >> create_sentinels_hashtbl: total unique intrauobjcoll sentinels=1
uberspark >> created uobj collection uobjcoll_public_methods and intrauobjcoll sentinels hashtbl
uberspark >> loading cc-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0/uberspark.json
uberspark >> loaded cc_bridge settings
uberspark >> building cc-bridge: uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0
uberspark >> [docker] Sending build context to Docker daemon  20.48kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-5-arm-linux-gnueabihf     	    	 	 gcc-5-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ccea1428b380
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7aa0b3057c92
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 608a6d8ccf1a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 96d5263e3746
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8b2efa26c060
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 30c0ba6c77da
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 40d0be8877c0
uberspark >> [docker] Successfully built 40d0be8877c0
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0:latest
uberspark >> cc_bridge build success
uberspark >> loading as-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1/uberspark.json
uberspark >> loaded as_bridge settings
uberspark >> building as-bridge: uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.97kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 48156cb48fcc
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aa5d124d445c
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dce23951461b
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e34b715aedf1
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f57d0a45bf02
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 95e6f2bea157
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bef67965fdc9
uberspark >> [docker] Successfully built bef67965fdc9
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1:latest
uberspark >> as_bridge build success
uberspark >> loading casm-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest/uberspark.json
uberspark >> loaded casm as_bridge settings
uberspark >> building casm-bridge: uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest
uberspark >> [docker] Sending build context to Docker daemon  23.55kB
uberspark >> [docker] Step 1/42 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/42 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/42 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/42 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/42 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/42 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/42 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/42 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/42 : ENV archive_name=compcert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ac2929f7da6e
uberspark >> [docker] Step 11/42 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         opam         wget         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         binutils         curl         rsync         git         make         m4         patch         unzip         gawk         findutils
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a3fd636caaf5
uberspark >> [docker] Step 12/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 83188c226e81
uberspark >> [docker] Step 13/42 : RUN wget http://compcert.inria.fr/release/${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6b48b59ccc2e
uberspark >> [docker] Step 14/42 : RUN mv compcert-3.7.tgz /home/uberspark/CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> da5fc2905de2
uberspark >> [docker] Step 15/42 : ENV archive_name=CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9650dd055bcc
uberspark >> [docker] Step 16/42 : COPY compiler_script.sh /home/uberspark/
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 38228d6a284f
uberspark >> [docker] Step 17/42 : RUN cd /home/uberspark/ &&    chmod 755 compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b0cffb935df2
uberspark >> [docker] Step 18/42 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fcfa16e362ad
uberspark >> [docker] Step 19/42 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ae70b476d692
uberspark >> [docker] Step 20/42 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> cdf642b1de1d
uberspark >> [docker] Step 21/42 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d2fd19bf5d05
uberspark >> [docker] Step 22/42 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4d869469db75
uberspark >> [docker] Step 23/42 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0c522d7c1d16
uberspark >> [docker] Step 24/42 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7cb1c5406b33
uberspark >> [docker] Step 25/42 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1375a63660a
uberspark >> [docker] Step 26/42 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> efe85dfa9114
uberspark >> [docker] Step 27/42 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec611e3e585c
uberspark >> [docker] Step 28/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 257cf423b905
uberspark >> [docker] Step 29/42 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y coq=8.8.0 &&    opam install -y coq=8.8.0 &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 092d9362ff7a
uberspark >> [docker] Step 30/42 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9d4c3a749e16
uberspark >> [docker] Step 31/42 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c0e916640425
uberspark >> [docker] Step 32/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 39fc20f5489c
uberspark >> [docker] Step 33/42 : WORKDIR /home/uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5486d9630712
uberspark >> [docker] Step 34/42 : RUN echo $archive_name
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 2a588a28202b
uberspark >> [docker] Step 35/42 : RUN tar -xzf ${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4569a9ecc81
uberspark >> [docker] Step 36/42 : RUN . ./compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dec1042c33a4
uberspark >> [docker] Step 37/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af2e3cc4f9f0
uberspark >> [docker] Step 38/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f3101b81544b
uberspark >> [docker] Step 39/42 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 56a7fa2d4b50
uberspark >> [docker] Step 40/42 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 993c5dc02031
uberspark >> [docker] Step 41/42 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4f615640493b
uberspark >> [docker] Step 42/42 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 85347dcd1694
uberspark >> [docker] Successfully built 85347dcd1694
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest:latest
uberspark >> casm as_bridge build success
uberspark >> loading ld-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1/uberspark.json
uberspark >> loaded ld_bridge settings
uberspark >> building ld-bridge: uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.46kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&     apt-get clean && rm -rf /var/lib/apt/lists/*
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 785c0e03fb44
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 985aab90b90d
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0be41e37ae9a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 21d30f366b9d
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8c57dcc44d18
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aea3a1b5e363
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 53eec3c85adc
uberspark >> [docker] Successfully built 53eec3c85adc
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1:latest
uberspark >> ld_bridge build success
uberspark >> loading vf-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0/uberspark.json
uberspark >> loaded uberspark vf_bridge settings
uberspark >> building vf-bridge: uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0
uberspark >> [docker] Sending build context to Docker daemon   21.5kB
uberspark >> [docker] Step 1/31 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/31 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/31 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/31 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/31 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/31 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/31 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/31 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/31 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         opam
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e0f3c81ab0da
uberspark >> [docker] Step 11/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a8e4a0faf9d5
uberspark >> [docker] Step 12/31 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5b0840091420
uberspark >> [docker] Step 13/31 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fc0d2984a814
uberspark >> [docker] Step 14/31 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6c8c044d30d7
uberspark >> [docker] Step 15/31 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c23fff1cb534
uberspark >> [docker] Step 16/31 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e463f9a24b75
uberspark >> [docker] Step 17/31 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b55b47a2face
uberspark >> [docker] Step 18/31 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9a6c04cf246e
uberspark >> [docker] Step 19/31 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e750690aabbc
uberspark >> [docker] Step 20/31 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7e60a9afa0e3
uberspark >> [docker] Step 21/31 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 25183e7f992f
uberspark >> [docker] Step 22/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 1162314893dd
uberspark >> [docker] Step 23/31 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8ebc7f8a47ec
uberspark >> [docker] Step 24/31 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8bbf8c42c37e
uberspark >> [docker] Step 25/31 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 63f8e61a3eb9
uberspark >> [docker] Step 26/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1a0bb4af76b
uberspark >> [docker] Step 27/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fe987acc8322
uberspark >> [docker] Step 28/31 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 311036dc4884
uberspark >> [docker] Step 29/31 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7b4d89e6d54e
uberspark >> [docker] Step 30/31 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 90a362c51011
uberspark >> [docker] Step 31/31 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 47e34a7d99ca
uberspark >> [docker] Successfully built 47e34a7d99ca
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0:latest
uberspark >> uberspark vf_bridge build success
uberspark >> collect_uobjinfo: total collection uobjs=1
uberspark >> successfully collected uobj information
uberspark >> namespace root=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/
uberspark >> abs_uobjcoll_path_ns=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll
uberspark >> in_namespace_build=false
uberspark >> prepping for out-of-namespace build...
uberspark >> d_path_ns=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjcoll/platform/st/stm32mp1
uberspark >> uobjcoll canonical build namespace ready
uberspark >> initializing uobj 'main'...
uberspark >> uobj target spec => ::
uberspark >> uobj target definition => st:armv8_32:generic
uberspark >> json_node_uberspark_uobj_to_var: retval=true
uberspark >> total sources: h files=105, c files=132, casm files=0, asm files=20
uberspark >> total public methods:1,1
uberspark >> list of uobj-intrauobjcoll-callees follows:
uberspark >> total interuobjcoll callees=0
uberspark >> total legacy callees=0
uberspark >> binary sections override:0
uberspark >> successfully parsed uobj manifest
uberspark >> reading slt manifest from:/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjslt/armv8_32/generic/uberspark.json
uberspark >> Consolidating uobj section memory map...
uberspark >> section at address 0x00000000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00200000, size=0x00200000 padding=0x00000000
uberspark >> section is for publicmethod: name=main
uberspark >> updated publicmethod address as 0x00200000
uberspark >> section at address 0x00400000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00600000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00800000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00a00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00c00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x00e00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01000000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01200000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01400000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01600000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01800000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x01a00000, size=0x00200000 padding=0x00000000
uberspark >> uobj section memory map initialized
uberspark >> uobj 'main' successfully initialized; size=0x02400000
uberspark >> adding public method info for uobj 'main', total public methods=1
uberspark >> uobjcoll uobjs public_methods hashtbl dump follows:
uberspark >> canonical public_method=uberspark_uobjcoll_platform_st_stm32mp1_main__main; public_method=main, pm_addr=0x00200000
uberspark >> create_uobjs_publicmethods_list_mforder [START]
uberspark >> adding public method info for uobj 'main', total public methods=1
uberspark >> uobjcoll uobjs public_methods assoc list dump follows:
uberspark >> canonical public_method=uberspark_uobjcoll_platform_st_stm32mp1_main__main; public_method=main, pm_addr=0x00200000
uberspark >> create_uobjs_publicmethods_list_mforder [END]
uberspark >> created uobj collection uobjs public methods hashtable and association list
uberspark >> proceeding to add init-uobjcoll sentinel sections...
uberspark >> proceeding to add inter-uobjcoll sentinel sections...
uberspark >> public_method=uberspark_uobjcoll_platform_st_stm32mp1_main__main
uberspark >> sentinel type=generic/generic/any/call, size=0x00001000
uberspark >> added section for uobjcoll_public_methods sentinel '.section_uobjcoll_publicmethod_sentinel__uberspark_uobjcoll_platform_st_stm32mp1_main__main__generic/generic/any/call' at 0x60000000, size=00200000...
uberspark >> proceeding to add intra-uobjcoll sentinel sections...
uberspark >> public_method=uberspark_uobjcoll_platform_st_stm32mp1_main__main
uberspark >> sentinel type=generic/generic/any/call, size=0x00001000
uberspark >> added section for intrauobjcoll sentinel '.section_intrauobjcoll_publicmethod_sentinel__uberspark_uobjcoll_platform_st_stm32mp1_main__main__generic/generic/any/call' at 0x60200000, size=00200000...
uberspark >> proceeding to add uobj sections...
uberspark >> adding section for uobj 'main' at 0x60400000, size=02400000...
uberspark >> File "uberspark_uobjcoll.ml", line 767, characters 93-100: d_load_address=0x60000000, d_size=0x02800000
uberspark >> consolidated uobj collection sections, total size=0x02800000
uberspark >> File "uberspark_uobjcoll.ml", line 550, characters 103-110: total d_memorymapped_sections_list elements=3
uberspark >> computing memory-map for uobj 'main' at load-address=0x60400000...
uberspark >> section at address 0x60400000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x60600000, size=0x00200000 padding=0x00000000
uberspark >> section is for publicmethod: name=main
uberspark >> updated publicmethod address as 0x60600000
uberspark >> section at address 0x60800000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x60a00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x60c00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x60e00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61000000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61200000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61400000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61600000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61800000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61a00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61c00000, size=0x00200000 padding=0x00000000
uberspark >> section at address 0x61e00000, size=0x00200000 padding=0x00000000
uberspark >> computed uobj section memory map for all uobjs within collection
uberspark >> adding public method info for uobj 'main', total public methods=1
uberspark >> uobjcoll uobjs public_methods hashtbl dump follows:
uberspark >> canonical public_method=uberspark_uobjcoll_platform_st_stm32mp1_main__main; public_method=main, pm_addr=0x60600000
uberspark >> created uobj collection uobjs public methods hashtable and association list with address
uberspark >> Generating uobjcoll top-level include header source...[OK]
uberspark >> d_path_to_mf_filename=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll
uberspark >> d_path_ns=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjcoll/platform/st/stm32mp1
uberspark >> init_method canonical_public_method=__
uberspark >> created sentinel address hashtbls
uberspark >> prepare_for_uobjcoll_sentinel_codegen: uobjcoll_init_method=:
uberspark >> prepare_for_uobjcoll_sentinel_codegen: uobjcoll_public_methods public_methods=1
uberspark >> uobjcoll_public_methods; added sentinel type generic/generic/any/call for public-method uberspark_uobjcoll_platform_st_stm32mp1_main__main
uberspark >> intrauobjcoll; added sentinel type generic/generic/any/call for public-method uberspark_uobjcoll_platform_st_stm32mp1_main__main
uberspark >> dump of list of sentinels for codegen follows:
uberspark >> name=uberspark_uobjcoll_platform_st_stm32mp1_main__main__generic/generic/any/call, addr=0x60000000, pm_addr=0x60600000
uberspark >> name=uberspark_uobjcoll_platform_st_stm32mp1_main__main__generic/generic/any/call, addr=0x60200000, pm_addr=0x60600000
uberspark >> dumped list of sentinels for codegen
uberspark >> prepared inputs for sentinel code generation
uberspark >> File "uberspark_codegen.ml", line 727, characters 8-15: length of pm_sentinel_list=2
uberspark >> generated source for  uobj collection sentinel definitions
uberspark >> setup intrauobjcoll callees sentinel type hashtbl
uberspark >> Building uobj 'main'...
uberspark >> setup uobj sentinel linkage table information
uberspark >> uobjrtl namespace staging-dir-prefix=/home/yeeb16/uberspark/staging/stm32mp1
uberspark >> uobjrtl builddir prefix=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build
uberspark >> Generating uobj top-level include header source...[OK]
uberspark >> prepare_slt_codegen: start
uberspark >> length of callees_sentinel_type_hashtbl=1
uberspark >> prepare_slt_codegen: end
uberspark >> Generating uobj binary public methods info source...[OK]
uberspark >> Generating uobj binary intrauobjcoll callees info source...[OK]
uberspark >> Generating uobj binary interuobjcoll callees info source...[OK]
uberspark >> Generating uobj binary legacy callees info source...[OK]
uberspark >> Generating uobj binary header source...[OK]
uberspark >> Generating uobj binary linker script...[OK]
uberspark >> prepared uobj sources
uberspark >> namespace root=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/
uberspark >> abs_uobj_path_ns=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main
uberspark >> in_namespace_build=false
uberspark >> prepping for out-of-namespace build...
uberspark >> d_path_ns=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjcoll/platform/st/stm32mp1/main
uberspark >> d_path_to_mf_filename=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main
uberspark >> d_path_ns=/home/yeeb16/uberspark/staging/stm32mp1/uberspark/uobjcoll/platform/st/stm32mp1/main
uberspark >> ready for out-of-namespace build
uberspark >> initializing bridges with uobj manifest override...
uberspark >> loading cc-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0/uberspark.json
uberspark >> loaded cc_bridge settings
uberspark >> building cc-bridge: uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0
uberspark >> [docker] Sending build context to Docker daemon  20.48kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-5-arm-linux-gnueabihf     	    	 	 gcc-5-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ccea1428b380
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7aa0b3057c92
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 608a6d8ccf1a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 96d5263e3746
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8b2efa26c060
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 30c0ba6c77da
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 40d0be8877c0
uberspark >> [docker] Successfully built 40d0be8877c0
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0:latest
uberspark >> cc_bridge build success
uberspark >> loading as-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1/uberspark.json
uberspark >> loaded as_bridge settings
uberspark >> building as-bridge: uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.97kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 48156cb48fcc
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aa5d124d445c
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dce23951461b
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e34b715aedf1
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f57d0a45bf02
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 95e6f2bea157
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bef67965fdc9
uberspark >> [docker] Successfully built bef67965fdc9
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1:latest
uberspark >> as_bridge build success
uberspark >> loading casm-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest/uberspark.json
uberspark >> loaded casm as_bridge settings
uberspark >> building casm-bridge: uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest
uberspark >> [docker] Sending build context to Docker daemon  23.55kB
uberspark >> [docker] Step 1/42 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/42 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/42 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/42 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/42 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/42 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/42 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/42 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/42 : ENV archive_name=compcert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ac2929f7da6e
uberspark >> [docker] Step 11/42 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         opam         wget         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         binutils         curl         rsync         git         make         m4         patch         unzip         gawk         findutils
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a3fd636caaf5
uberspark >> [docker] Step 12/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 83188c226e81
uberspark >> [docker] Step 13/42 : RUN wget http://compcert.inria.fr/release/${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6b48b59ccc2e
uberspark >> [docker] Step 14/42 : RUN mv compcert-3.7.tgz /home/uberspark/CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> da5fc2905de2
uberspark >> [docker] Step 15/42 : ENV archive_name=CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9650dd055bcc
uberspark >> [docker] Step 16/42 : COPY compiler_script.sh /home/uberspark/
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 38228d6a284f
uberspark >> [docker] Step 17/42 : RUN cd /home/uberspark/ &&    chmod 755 compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b0cffb935df2
uberspark >> [docker] Step 18/42 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fcfa16e362ad
uberspark >> [docker] Step 19/42 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ae70b476d692
uberspark >> [docker] Step 20/42 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> cdf642b1de1d
uberspark >> [docker] Step 21/42 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d2fd19bf5d05
uberspark >> [docker] Step 22/42 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4d869469db75
uberspark >> [docker] Step 23/42 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0c522d7c1d16
uberspark >> [docker] Step 24/42 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7cb1c5406b33
uberspark >> [docker] Step 25/42 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1375a63660a
uberspark >> [docker] Step 26/42 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> efe85dfa9114
uberspark >> [docker] Step 27/42 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec611e3e585c
uberspark >> [docker] Step 28/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 257cf423b905
uberspark >> [docker] Step 29/42 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y coq=8.8.0 &&    opam install -y coq=8.8.0 &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 092d9362ff7a
uberspark >> [docker] Step 30/42 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9d4c3a749e16
uberspark >> [docker] Step 31/42 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c0e916640425
uberspark >> [docker] Step 32/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 39fc20f5489c
uberspark >> [docker] Step 33/42 : WORKDIR /home/uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5486d9630712
uberspark >> [docker] Step 34/42 : RUN echo $archive_name
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 2a588a28202b
uberspark >> [docker] Step 35/42 : RUN tar -xzf ${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4569a9ecc81
uberspark >> [docker] Step 36/42 : RUN . ./compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dec1042c33a4
uberspark >> [docker] Step 37/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af2e3cc4f9f0
uberspark >> [docker] Step 38/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f3101b81544b
uberspark >> [docker] Step 39/42 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 56a7fa2d4b50
uberspark >> [docker] Step 40/42 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 993c5dc02031
uberspark >> [docker] Step 41/42 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4f615640493b
uberspark >> [docker] Step 42/42 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 85347dcd1694
uberspark >> [docker] Successfully built 85347dcd1694
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest:latest
uberspark >> casm as_bridge build success
uberspark >> loading ld-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1/uberspark.json
uberspark >> loaded ld_bridge settings
uberspark >> building ld-bridge: uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.46kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&     apt-get clean && rm -rf /var/lib/apt/lists/*
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 785c0e03fb44
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 985aab90b90d
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0be41e37ae9a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 21d30f366b9d
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8c57dcc44d18
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aea3a1b5e363
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 53eec3c85adc
uberspark >> [docker] Successfully built 53eec3c85adc
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1:latest
uberspark >> ld_bridge build success
uberspark >> loading vf-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0/uberspark.json
uberspark >> loaded uberspark vf_bridge settings
uberspark >> building vf-bridge: uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0
uberspark >> [docker] Sending build context to Docker daemon   21.5kB
uberspark >> [docker] Step 1/31 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/31 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/31 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/31 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/31 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/31 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/31 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/31 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/31 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         opam
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e0f3c81ab0da
uberspark >> [docker] Step 11/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a8e4a0faf9d5
uberspark >> [docker] Step 12/31 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5b0840091420
uberspark >> [docker] Step 13/31 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fc0d2984a814
uberspark >> [docker] Step 14/31 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6c8c044d30d7
uberspark >> [docker] Step 15/31 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c23fff1cb534
uberspark >> [docker] Step 16/31 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e463f9a24b75
uberspark >> [docker] Step 17/31 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b55b47a2face
uberspark >> [docker] Step 18/31 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9a6c04cf246e
uberspark >> [docker] Step 19/31 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e750690aabbc
uberspark >> [docker] Step 20/31 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7e60a9afa0e3
uberspark >> [docker] Step 21/31 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 25183e7f992f
uberspark >> [docker] Step 22/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 1162314893dd
uberspark >> [docker] Step 23/31 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8ebc7f8a47ec
uberspark >> [docker] Step 24/31 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8bbf8c42c37e
uberspark >> [docker] Step 25/31 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 63f8e61a3eb9
uberspark >> [docker] Step 26/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1a0bb4af76b
uberspark >> [docker] Step 27/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fe987acc8322
uberspark >> [docker] Step 28/31 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 311036dc4884
uberspark >> [docker] Step 29/31 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7b4d89e6d54e
uberspark >> [docker] Step 30/31 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 90a362c51011
uberspark >> [docker] Step 31/31 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 47e34a7d99ca
uberspark >> [docker] Successfully built 47e34a7d99ca
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0:latest
uberspark >> uberspark vf_bridge build success
uberspark >> proceeding to compile c files...
uberspark >> d_cmd=export var_bridge_include_dirs_with_prefix && export var_bridge_input_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_input_files="  bl2/aarch32/bl2_arch_setup.c bl2/bl2_image_load_v2.c bl2/bl2_main.c bl32/sp_min/sp_min_main.c common/bl_common.c common/desc_image_load.c common/fdt_wrappers.c common/runtime_svc.c common/tf_log.c drivers/arm/gic/v2/gicdv2_helpers.c drivers/arm/gic/v2/gicv2_helpers.c drivers/arm/gic/v2/gicv2_main.c drivers/arm/tzc/tzc400.c drivers/console/multi_console.c drivers/delay_timer/delay_timer.c drivers/delay_timer/generic_delay_timer.c drivers/io/io_block.c drivers/io/io_dummy.c drivers/io/io_mtd.c drivers/io/io_storage.c drivers/mmc/mmc.c drivers/mtd/nand/core.c drivers/mtd/nand/raw_nand.c drivers/mtd/nand/spi_nand.c drivers/mtd/nor/spi_nor.c drivers/mtd/spi-mem/spi_mem.c drivers/partition/gpt.c drivers/partition/partition.c drivers/st/bsec/bsec.c drivers/st/clk/stm32mp1_clk.c drivers/st/clk/stm32mp_clkfunc.c drivers/st/crypto/stm32_hash.c drivers/st/ddr/stm32mp1_ddr.c drivers/st/ddr/stm32mp1_ddr_helpers.c drivers/st/ddr/stm32mp1_ram.c drivers/st/etzpc/etzpc.c drivers/st/fmc/stm32_fmc2_nand.c drivers/st/gpio/stm32_gpio.c drivers/st/i2c/stm32_i2c.c drivers/st/io/io_mmc.c drivers/st/io/io_stm32image.c drivers/st/iwdg/stm32_iwdg.c drivers/st/mmc/stm32_sdmmc2.c drivers/st/pmic/stm32mp_pmic.c drivers/st/pmic/stpmic1.c drivers/st/reset/stm32mp1_reset.c drivers/st/scmi-msg/base.c drivers/st/scmi-msg/clock.c drivers/st/scmi-msg/entry.c drivers/st/scmi-msg/reset_domain.c drivers/st/scmi-msg/smt.c drivers/st/spi/stm32_qspi.c lib/compiler-rt/builtins/ctzdi2.c lib/compiler-rt/builtins/divdi3.c lib/compiler-rt/builtins/divmoddi4.c lib/compiler-rt/builtins/lshrdi3.c lib/compiler-rt/builtins/popcountdi2.c lib/compiler-rt/builtins/popcountsi2.c lib/compiler-rt/builtins/udivmoddi4.c lib/cpus/errata_report.c lib/el3_runtime/aarch32/context_mgmt.c lib/el3_runtime/cpu_data_array.c lib/libc/abort.c lib/libc/assert.c lib/libc/exit.c lib/libc/memchr.c lib/libc/memcmp.c lib/libc/memcpy.c lib/libc/memmove.c lib/libc/memrchr.c lib/libc/memset.c lib/libc/printf.c lib/libc/putchar.c lib/libc/puts.c lib/libc/snprintf.c lib/libc/strchr.c lib/libc/strcmp.c lib/libc/strlcpy.c lib/libc/strlen.c lib/libc/strncmp.c lib/libc/strnlen.c lib/libc/strrchr.c lib/libfdt/fdt.c lib/libfdt/fdt_addresses.c lib/libfdt/fdt_empty_tree.c lib/libfdt/fdt_ro.c lib/libfdt/fdt_rw.c lib/libfdt/fdt_strerror.c lib/libfdt/fdt_sw.c lib/libfdt/fdt_wip.c lib/locks/bakery/bakery_lock_normal.c lib/psci/psci_common.c lib/psci/psci_main.c lib/psci/psci_mem_protect.c lib/psci/psci_off.c lib/psci/psci_on.c lib/psci/psci_setup.c lib/psci/psci_suspend.c lib/psci/psci_system_off.c lib/xlat_tables_v2/aarch32/xlat_tables_arch.c lib/xlat_tables_v2/xlat_tables_context.c lib/xlat_tables_v2/xlat_tables_core.c lib/xlat_tables_v2/xlat_tables_utils.c plat/common/aarch32/plat_common.c plat/common/aarch32/plat_sp_min_common.c plat/common/plat_bl_common.c plat/common/plat_gicv2.c plat/common/plat_log_common.c plat/common/plat_psci_common.c plat/st/common/bl2_io_storage.c plat/st/common/stm32mp_auth.c plat/st/common/stm32mp_common.c plat/st/common/stm32mp_dt.c services/arm_arch_svc/arm_arch_svc_setup.c services/std_svc/std_svc_setup.c bl2_plat_setup.c plat_bl2_mem_params_desc.c plat_image_load.c services/bsec_svc.c services/stm32mp1_svc_setup.c sp_min/sp_min_setup.c stm32mp1_boot_device.c stm32mp1_context.c stm32mp1_dbgmcu.c stm32mp1_gic.c stm32mp1_pm.c stm32mp1_private.c stm32mp1_scmi.c stm32mp1_security.c stm32mp1_shared_resources.c stm32mp1_syscfg.c stm32mp1_topology.c " && vararray_bridge_input_files=$(echo $var_bridge_input_files | tr " " "\n") && for input_file_name in $vararray_bridge_input_files; do echo "Compiling ${input_file_name} ..." && arm-linux-gnueabihf-gcc-5  -Werror -Wall -Wmissing-include-dirs -Wunused -Wdisabled-optimization	-Wvla -Wshadow -Wno-unused-parameter -Wredundant-decls -Wunused-but-set-variable -Wmaybe-uninitialized -Wpacked-bitfield-compat -Wlogical-op -Wno-error=deprecated-declarations -Wno-error=cpp -mcpu=cortex-a7 -mfpu=neon -mthumb -mno-unaligned-access -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -fno-common -Os -std=gnu99 -mfloat-abi=soft -fno-stack-protector -nostartfiles -ffreestanding -marm -mno-thumb-interwork -c ${var_bridge_include_dirs_with_prefix} ${input_file_name} -o ${input_file_name}.o ; done && cp -f /usr/lib/gcc-cross/arm-linux-gnueabihf/5/libgcc.a /home/uberspark/src/cclib.a
uberspark >> context_path=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build
uberspark >> exec=run --rm -e D_CMD="cd /home/uberspark/src && export var_bridge_include_dirs_with_prefix && export var_bridge_input_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_input_files="  bl2/aarch32/bl2_arch_setup.c bl2/bl2_image_load_v2.c bl2/bl2_main.c bl32/sp_min/sp_min_main.c common/bl_common.c common/desc_image_load.c common/fdt_wrappers.c common/runtime_svc.c common/tf_log.c drivers/arm/gic/v2/gicdv2_helpers.c drivers/arm/gic/v2/gicv2_helpers.c drivers/arm/gic/v2/gicv2_main.c drivers/arm/tzc/tzc400.c drivers/console/multi_console.c drivers/delay_timer/delay_timer.c drivers/delay_timer/generic_delay_timer.c drivers/io/io_block.c drivers/io/io_dummy.c drivers/io/io_mtd.c drivers/io/io_storage.c drivers/mmc/mmc.c drivers/mtd/nand/core.c drivers/mtd/nand/raw_nand.c drivers/mtd/nand/spi_nand.c drivers/mtd/nor/spi_nor.c drivers/mtd/spi-mem/spi_mem.c drivers/partition/gpt.c drivers/partition/partition.c drivers/st/bsec/bsec.c drivers/st/clk/stm32mp1_clk.c drivers/st/clk/stm32mp_clkfunc.c drivers/st/crypto/stm32_hash.c drivers/st/ddr/stm32mp1_ddr.c drivers/st/ddr/stm32mp1_ddr_helpers.c drivers/st/ddr/stm32mp1_ram.c drivers/st/etzpc/etzpc.c drivers/st/fmc/stm32_fmc2_nand.c drivers/st/gpio/stm32_gpio.c drivers/st/i2c/stm32_i2c.c drivers/st/io/io_mmc.c drivers/st/io/io_stm32image.c drivers/st/iwdg/stm32_iwdg.c drivers/st/mmc/stm32_sdmmc2.c drivers/st/pmic/stm32mp_pmic.c drivers/st/pmic/stpmic1.c drivers/st/reset/stm32mp1_reset.c drivers/st/scmi-msg/base.c drivers/st/scmi-msg/clock.c drivers/st/scmi-msg/entry.c drivers/st/scmi-msg/reset_domain.c drivers/st/scmi-msg/smt.c drivers/st/spi/stm32_qspi.c lib/compiler-rt/builtins/ctzdi2.c lib/compiler-rt/builtins/divdi3.c lib/compiler-rt/builtins/divmoddi4.c lib/compiler-rt/builtins/lshrdi3.c lib/compiler-rt/builtins/popcountdi2.c lib/compiler-rt/builtins/popcountsi2.c lib/compiler-rt/builtins/udivmoddi4.c lib/cpus/errata_report.c lib/el3_runtime/aarch32/context_mgmt.c lib/el3_runtime/cpu_data_array.c lib/libc/abort.c lib/libc/assert.c lib/libc/exit.c lib/libc/memchr.c lib/libc/memcmp.c lib/libc/memcpy.c lib/libc/memmove.c lib/libc/memrchr.c lib/libc/memset.c lib/libc/printf.c lib/libc/putchar.c lib/libc/puts.c lib/libc/snprintf.c lib/libc/strchr.c lib/libc/strcmp.c lib/libc/strlcpy.c lib/libc/strlen.c lib/libc/strncmp.c lib/libc/strnlen.c lib/libc/strrchr.c lib/libfdt/fdt.c lib/libfdt/fdt_addresses.c lib/libfdt/fdt_empty_tree.c lib/libfdt/fdt_ro.c lib/libfdt/fdt_rw.c lib/libfdt/fdt_strerror.c lib/libfdt/fdt_sw.c lib/libfdt/fdt_wip.c lib/locks/bakery/bakery_lock_normal.c lib/psci/psci_common.c lib/psci/psci_main.c lib/psci/psci_mem_protect.c lib/psci/psci_off.c lib/psci/psci_on.c lib/psci/psci_setup.c lib/psci/psci_suspend.c lib/psci/psci_system_off.c lib/xlat_tables_v2/aarch32/xlat_tables_arch.c lib/xlat_tables_v2/xlat_tables_context.c lib/xlat_tables_v2/xlat_tables_core.c lib/xlat_tables_v2/xlat_tables_utils.c plat/common/aarch32/plat_common.c plat/common/aarch32/plat_sp_min_common.c plat/common/plat_bl_common.c plat/common/plat_gicv2.c plat/common/plat_log_common.c plat/common/plat_psci_common.c plat/st/common/bl2_io_storage.c plat/st/common/stm32mp_auth.c plat/st/common/stm32mp_common.c plat/st/common/stm32mp_dt.c services/arm_arch_svc/arm_arch_svc_setup.c services/std_svc/std_svc_setup.c bl2_plat_setup.c plat_bl2_mem_params_desc.c plat_image_load.c services/bsec_svc.c services/stm32mp1_svc_setup.c sp_min/sp_min_setup.c stm32mp1_boot_device.c stm32mp1_context.c stm32mp1_dbgmcu.c stm32mp1_gic.c stm32mp1_pm.c stm32mp1_private.c stm32mp1_scmi.c stm32mp1_security.c stm32mp1_shared_resources.c stm32mp1_syscfg.c stm32mp1_topology.c " && vararray_bridge_input_files=$(echo $var_bridge_input_files | tr " " "\n") && for input_file_name in $vararray_bridge_input_files; do echo "Compiling ${input_file_name} ..." && arm-linux-gnueabihf-gcc-5  -Werror -Wall -Wmissing-include-dirs -Wunused -Wdisabled-optimization	-Wvla -Wshadow -Wno-unused-parameter -Wredundant-decls -Wunused-but-set-variable -Wmaybe-uninitialized -Wpacked-bitfield-compat -Wlogical-op -Wno-error=deprecated-declarations -Wno-error=cpp -mcpu=cortex-a7 -mfpu=neon -mthumb -mno-unaligned-access -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -fno-common -Os -std=gnu99 -mfloat-abi=soft -fno-stack-protector -nostartfiles -ffreestanding -marm -mno-thumb-interwork -c ${var_bridge_include_dirs_with_prefix} ${input_file_name} -o ${input_file_name}.o ; done && cp -f /usr/lib/gcc-cross/arm-linux-gnueabihf/5/libgcc.a /home/uberspark/src/cclib.a" -v /home/yeeb16:/home/yeeb16 -v /home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build:/home/uberspark/src -t uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0
uberspark >> [docker] Removing user `uberspark' ...
uberspark >> [docker] Warning: group `uberspark' has no more members.
uberspark >> [docker] Done.
uberspark >> [docker] Adding group `uberspark' (GID 1000) ...
uberspark >> [docker] Done.
uberspark >> [docker] Adding system user `uberspark' (UID 1000) ...
uberspark >> [docker] Adding new user `uberspark' (UID 1000) with group `uberspark' ...
uberspark >> [docker] Not creating home directory `/home/uberspark'.
uberspark >> [docker] No opam detected. Skipping opam initialization...
uberspark >> [docker] Compiling bl2/aarch32/bl2_arch_setup.c ...
uberspark >> [docker] Compiling bl2/bl2_image_load_v2.c ...
uberspark >> [docker] Compiling bl2/bl2_main.c ...
uberspark >> [docker] Compiling bl32/sp_min/sp_min_main.c ...
uberspark >> [docker] Compiling common/bl_common.c ...
uberspark >> [docker] Compiling common/desc_image_load.c ...
uberspark >> [docker] Compiling common/fdt_wrappers.c ...
uberspark >> [docker] Compiling common/runtime_svc.c ...
uberspark >> [docker] Compiling common/tf_log.c ...
uberspark >> [docker] Compiling drivers/arm/gic/v2/gicdv2_helpers.c ...
uberspark >> [docker] Compiling drivers/arm/gic/v2/gicv2_helpers.c ...
uberspark >> [docker] Compiling drivers/arm/gic/v2/gicv2_main.c ...
uberspark >> [docker] Compiling drivers/arm/tzc/tzc400.c ...
uberspark >> [docker] Compiling drivers/console/multi_console.c ...
uberspark >> [docker] Compiling drivers/delay_timer/delay_timer.c ...
uberspark >> [docker] Compiling drivers/delay_timer/generic_delay_timer.c ...
uberspark >> [docker] Compiling drivers/io/io_block.c ...
uberspark >> [docker] Compiling drivers/io/io_dummy.c ...
uberspark >> [docker] Compiling drivers/io/io_mtd.c ...
uberspark >> [docker] Compiling drivers/io/io_storage.c ...
uberspark >> [docker] Compiling drivers/mmc/mmc.c ...
uberspark >> [docker] Compiling drivers/mtd/nand/core.c ...
uberspark >> [docker] Compiling drivers/mtd/nand/raw_nand.c ...
uberspark >> [docker] Compiling drivers/mtd/nand/spi_nand.c ...
uberspark >> [docker] Compiling drivers/mtd/nor/spi_nor.c ...
uberspark >> [docker] Compiling drivers/mtd/spi-mem/spi_mem.c ...
uberspark >> [docker] Compiling drivers/partition/gpt.c ...
uberspark >> [docker] Compiling drivers/partition/partition.c ...
uberspark >> [docker] Compiling drivers/st/bsec/bsec.c ...
uberspark >> [docker] Compiling drivers/st/clk/stm32mp1_clk.c ...
uberspark >> [docker] Compiling drivers/st/clk/stm32mp_clkfunc.c ...
uberspark >> [docker] Compiling drivers/st/crypto/stm32_hash.c ...
uberspark >> [docker] Compiling drivers/st/ddr/stm32mp1_ddr.c ...
uberspark >> [docker] Compiling drivers/st/ddr/stm32mp1_ddr_helpers.c ...
uberspark >> [docker] Compiling drivers/st/ddr/stm32mp1_ram.c ...
uberspark >> [docker] Compiling drivers/st/etzpc/etzpc.c ...
uberspark >> [docker] Compiling drivers/st/fmc/stm32_fmc2_nand.c ...
uberspark >> [docker] Compiling drivers/st/gpio/stm32_gpio.c ...
uberspark >> [docker] Compiling drivers/st/i2c/stm32_i2c.c ...
uberspark >> [docker] Compiling drivers/st/io/io_mmc.c ...
uberspark >> [docker] Compiling drivers/st/io/io_stm32image.c ...
uberspark >> [docker] Compiling drivers/st/iwdg/stm32_iwdg.c ...
uberspark >> [docker] Compiling drivers/st/mmc/stm32_sdmmc2.c ...
uberspark >> [docker] Compiling drivers/st/pmic/stm32mp_pmic.c ...
uberspark >> [docker] Compiling drivers/st/pmic/stpmic1.c ...
uberspark >> [docker] Compiling drivers/st/reset/stm32mp1_reset.c ...
uberspark >> [docker] Compiling drivers/st/scmi-msg/base.c ...
uberspark >> [docker] Compiling drivers/st/scmi-msg/clock.c ...
uberspark >> [docker] Compiling drivers/st/scmi-msg/entry.c ...
uberspark >> [docker] Compiling drivers/st/scmi-msg/reset_domain.c ...
uberspark >> [docker] Compiling drivers/st/scmi-msg/smt.c ...
uberspark >> [docker] Compiling drivers/st/spi/stm32_qspi.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/ctzdi2.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/divdi3.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/divmoddi4.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/lshrdi3.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/popcountdi2.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/popcountsi2.c ...
uberspark >> [docker] Compiling lib/compiler-rt/builtins/udivmoddi4.c ...
uberspark >> [docker] Compiling lib/cpus/errata_report.c ...
uberspark >> [docker] Compiling lib/el3_runtime/aarch32/context_mgmt.c ...
uberspark >> [docker] Compiling lib/el3_runtime/cpu_data_array.c ...
uberspark >> [docker] Compiling lib/libc/abort.c ...
uberspark >> [docker] Compiling lib/libc/assert.c ...
uberspark >> [docker] Compiling lib/libc/exit.c ...
uberspark >> [docker] Compiling lib/libc/memchr.c ...
uberspark >> [docker] Compiling lib/libc/memcmp.c ...
uberspark >> [docker] Compiling lib/libc/memcpy.c ...
uberspark >> [docker] Compiling lib/libc/memmove.c ...
uberspark >> [docker] Compiling lib/libc/memrchr.c ...
uberspark >> [docker] Compiling lib/libc/memset.c ...
uberspark >> [docker] Compiling lib/libc/printf.c ...
uberspark >> [docker] Compiling lib/libc/putchar.c ...
uberspark >> [docker] Compiling lib/libc/puts.c ...
uberspark >> [docker] Compiling lib/libc/snprintf.c ...
uberspark >> [docker] Compiling lib/libc/strchr.c ...
uberspark >> [docker] Compiling lib/libc/strcmp.c ...
uberspark >> [docker] Compiling lib/libc/strlcpy.c ...
uberspark >> [docker] Compiling lib/libc/strlen.c ...
uberspark >> [docker] Compiling lib/libc/strncmp.c ...
uberspark >> [docker] Compiling lib/libc/strnlen.c ...
uberspark >> [docker] Compiling lib/libc/strrchr.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_addresses.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_empty_tree.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_ro.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_rw.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_strerror.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_sw.c ...
uberspark >> [docker] Compiling lib/libfdt/fdt_wip.c ...
uberspark >> [docker] Compiling lib/locks/bakery/bakery_lock_normal.c ...
uberspark >> [docker] Compiling lib/psci/psci_common.c ...
uberspark >> [docker] Compiling lib/psci/psci_main.c ...
uberspark >> [docker] Compiling lib/psci/psci_mem_protect.c ...
uberspark >> [docker] Compiling lib/psci/psci_off.c ...
uberspark >> [docker] Compiling lib/psci/psci_on.c ...
uberspark >> [docker] Compiling lib/psci/psci_setup.c ...
uberspark >> [docker] Compiling lib/psci/psci_suspend.c ...
uberspark >> [docker] Compiling lib/psci/psci_system_off.c ...
uberspark >> [docker] Compiling lib/xlat_tables_v2/aarch32/xlat_tables_arch.c ...
uberspark >> [docker] Compiling lib/xlat_tables_v2/xlat_tables_context.c ...
uberspark >> [docker] Compiling lib/xlat_tables_v2/xlat_tables_core.c ...
uberspark >> [docker] Compiling lib/xlat_tables_v2/xlat_tables_utils.c ...
uberspark >> [docker] Compiling plat/common/aarch32/plat_common.c ...
uberspark >> [docker] Compiling plat/common/aarch32/plat_sp_min_common.c ...
uberspark >> [docker] Compiling plat/common/plat_bl_common.c ...
uberspark >> [docker] Compiling plat/common/plat_gicv2.c ...
uberspark >> [docker] Compiling plat/common/plat_log_common.c ...
uberspark >> [docker] Compiling plat/common/plat_psci_common.c ...
uberspark >> [docker] Compiling plat/st/common/bl2_io_storage.c ...
uberspark >> [docker] Compiling plat/st/common/stm32mp_auth.c ...
uberspark >> [docker] Compiling plat/st/common/stm32mp_common.c ...
uberspark >> [docker] Compiling plat/st/common/stm32mp_dt.c ...
uberspark >> [docker] Compiling services/arm_arch_svc/arm_arch_svc_setup.c ...
uberspark >> [docker] Compiling services/std_svc/std_svc_setup.c ...
uberspark >> [docker] Compiling bl2_plat_setup.c ...
uberspark >> [docker] Compiling plat_bl2_mem_params_desc.c ...
uberspark >> [docker] Compiling plat_image_load.c ...
uberspark >> [docker] Compiling services/bsec_svc.c ...
uberspark >> [docker] Compiling services/stm32mp1_svc_setup.c ...
uberspark >> [docker] Compiling sp_min/sp_min_setup.c ...
uberspark >> [docker] Compiling stm32mp1_boot_device.c ...
uberspark >> [docker] Compiling stm32mp1_context.c ...
uberspark >> [docker] Compiling stm32mp1_dbgmcu.c ...
uberspark >> [docker] Compiling stm32mp1_gic.c ...
uberspark >> [docker] Compiling stm32mp1_pm.c ...
uberspark >> [docker] Compiling stm32mp1_private.c ...
uberspark >> [docker] Compiling stm32mp1_scmi.c ...
uberspark >> [docker] Compiling stm32mp1_security.c ...
uberspark >> [docker] Compiling stm32mp1_shared_resources.c ...
uberspark >> [docker] Compiling stm32mp1_syscfg.c ...
uberspark >> [docker] Compiling stm32mp1_topology.c ...
uberspark >> compiled c files successfully!
uberspark >> proceeding to compile casm files...
uberspark >> d_cmd=export var_bridge_include_dirs_with_prefix && export var_bridge_source_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_source_files="  " && vararray_bridge_source_files=$(echo $var_bridge_source_files | tr " " "\n") && for source_file_name in $vararray_bridge_source_files; do echo "Compiling CASM source file ${source_file_name} ..." && cp -f ${source_file_name} ${source_file_name}.c && ccomp  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 -O0 -fpacked-structs -c -dmach ${source_file_name}.c && export vtmp=`dirname ${source_file_name}` && vtmp1=`basename ${source_file_name}` && mv -f ${vtmp1}.mach ${vtmp}/. 2>/dev/null; true  && frama-c -load-module /home/yeeb16/uberspark/tools/vbridge-plugin/Ubersparkvbridge -machdep gcc_x86_32 -kernel-msg-key pp -casm -casm-infile ${source_file_name}.mach -casm-outfile ${source_file_name}.s ; done
uberspark >> context_path=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build
uberspark >> exec=run --rm -e D_CMD="cd /home/uberspark/src && export var_bridge_include_dirs_with_prefix && export var_bridge_source_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_source_files="  " && vararray_bridge_source_files=$(echo $var_bridge_source_files | tr " " "\n") && for source_file_name in $vararray_bridge_source_files; do echo "Compiling CASM source file ${source_file_name} ..." && cp -f ${source_file_name} ${source_file_name}.c && ccomp  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 -O0 -fpacked-structs -c -dmach ${source_file_name}.c && export vtmp=`dirname ${source_file_name}` && vtmp1=`basename ${source_file_name}` && mv -f ${vtmp1}.mach ${vtmp}/. 2>/dev/null; true  && frama-c -load-module /home/yeeb16/uberspark/tools/vbridge-plugin/Ubersparkvbridge -machdep gcc_x86_32 -kernel-msg-key pp -casm -casm-infile ${source_file_name}.mach -casm-outfile ${source_file_name}.s ; done" -v /home/yeeb16:/home/yeeb16 -v /home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build:/home/uberspark/src -t uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest
uberspark >> [docker] Removing user `uberspark' ...
uberspark >> [docker] Warning: group `uberspark' has no more members.
uberspark >> [docker] Done.
uberspark >> [docker] Adding group `uberspark' (GID 1000) ...
uberspark >> [docker] Done.
uberspark >> [docker] Adding system user `uberspark' (UID 1000) ...
uberspark >> [docker] Adding new user `uberspark' (UID 1000) with group `uberspark' ...
uberspark >> [docker] Not creating home directory `/home/uberspark'.
uberspark >> [docker] # Run eval $(opam env) to update the current shell environment
uberspark >> compiled casm files successfully!
uberspark >> proceeding to compile asm files...
uberspark >> d_cmd=export var_bridge_include_dirs_with_prefix && export var_bridge_source_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_source_files="  uobjslt-intrauobjcoll-callees.S uobjslt-interuobjcoll-callees.S uobjslt-legacy-callees.S lib/locks/exclusive/aarch32/spinlock.S plat/common/aarch32/platform_up_stack.S bl2/aarch32/bl2_el3_entrypoint.S bl2/aarch32/bl2_el3_exceptions.S lib/cpus/aarch32/cpu_helpers.S common/aarch32/debug.S plat/common/aarch32/platform_helpers.S lib/compiler-rt/builtins/arm/aeabi_ldivmod.S lib/compiler-rt/builtins/arm/aeabi_uldivmod.S drivers/st/uart/aarch32/stm32_console.S lib/xlat_tables_v2/aarch32/enable_mmu.S lib/cpus/aarch32/cortex_a7.S bl32/sp_min/aarch32/entrypoint.S lib/el3_runtime/aarch32/cpu_data.S lib/psci/aarch32/psci_helpers.S plat/common/aarch32/platform_mp_stack.S lib/aarch32/cache_helpers.S lib/aarch32/misc_helpers.S stm32mp1.S stm32mp1_helper.S " && vararray_bridge_source_files=$(echo $var_bridge_source_files | tr " " "\n") && for source_file_name in $vararray_bridge_source_files; do echo "Compiling ${source_file_name} ..." && arm-linux-gnueabihf-gcc -D__ASSEMBLY__ -marm -march=armv8-a -mno-thumb-interwork -c ${var_bridge_include_dirs_with_prefix} ${source_file_name} -o ${source_file_name}.o ; done
uberspark >> context_path=/home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build
uberspark >> exec=run --rm -e D_CMD="cd /home/uberspark/src && export var_bridge_include_dirs_with_prefix && export var_bridge_source_files && var_bridge_include_dirs_with_prefix="  -I. -I/home/yeeb16/uberspark/staging/stm32mp1 " && var_bridge_source_files="  uobjslt-intrauobjcoll-callees.S uobjslt-interuobjcoll-callees.S uobjslt-legacy-callees.S lib/locks/exclusive/aarch32/spinlock.S plat/common/aarch32/platform_up_stack.S bl2/aarch32/bl2_el3_entrypoint.S bl2/aarch32/bl2_el3_exceptions.S lib/cpus/aarch32/cpu_helpers.S common/aarch32/debug.S plat/common/aarch32/platform_helpers.S lib/compiler-rt/builtins/arm/aeabi_ldivmod.S lib/compiler-rt/builtins/arm/aeabi_uldivmod.S drivers/st/uart/aarch32/stm32_console.S lib/xlat_tables_v2/aarch32/enable_mmu.S lib/cpus/aarch32/cortex_a7.S bl32/sp_min/aarch32/entrypoint.S lib/el3_runtime/aarch32/cpu_data.S lib/psci/aarch32/psci_helpers.S plat/common/aarch32/platform_mp_stack.S lib/aarch32/cache_helpers.S lib/aarch32/misc_helpers.S stm32mp1.S stm32mp1_helper.S " && vararray_bridge_source_files=$(echo $var_bridge_source_files | tr " " "\n") && for source_file_name in $vararray_bridge_source_files; do echo "Compiling ${source_file_name} ..." && arm-linux-gnueabihf-gcc -D__ASSEMBLY__ -marm -march=armv8-a -mno-thumb-interwork -c ${var_bridge_include_dirs_with_prefix} ${source_file_name} -o ${source_file_name}.o ; done" -v /home/yeeb16:/home/yeeb16 -v /home/yeeb16/uobjcoll-arm-trusted-firmware/plat/st/stm32mp1_uobjcoll/_build/main/_build:/home/uberspark/src -t uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1
uberspark >> [docker] Removing user `uberspark' ...
uberspark >> [docker] Warning: group `uberspark' has no more members.
uberspark >> [docker] Done.
uberspark >> [docker] Adding group `uberspark' (GID 1000) ...
uberspark >> [docker] Done.
uberspark >> [docker] Adding system user `uberspark' (UID 1000) ...
uberspark >> [docker] Adding new user `uberspark' (UID 1000) with group `uberspark' ...
uberspark >> [docker] Not creating home directory `/home/uberspark'.
uberspark >> [docker] No opam detected. Skipping opam initialization...
uberspark >> [docker] Compiling uobjslt-intrauobjcoll-callees.S ...
uberspark >> [docker] Compiling uobjslt-interuobjcoll-callees.S ...
uberspark >> [docker] Compiling uobjslt-legacy-callees.S ...
uberspark >> [docker] Compiling lib/locks/exclusive/aarch32/spinlock.S ...
uberspark >> [docker] lib/locks/exclusive/aarch32/spinlock.S:8:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling plat/common/aarch32/platform_up_stack.S ...
uberspark >> [docker] plat/common/aarch32/platform_up_stack.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling bl2/aarch32/bl2_el3_entrypoint.S ...
uberspark >> [docker] bl2/aarch32/bl2_el3_entrypoint.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling bl2/aarch32/bl2_el3_exceptions.S ...
uberspark >> [docker] bl2/aarch32/bl2_el3_exceptions.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/cpus/aarch32/cpu_helpers.S ...
uberspark >> [docker] lib/cpus/aarch32/cpu_helpers.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling common/aarch32/debug.S ...
uberspark >> [docker] common/aarch32/debug.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling plat/common/aarch32/platform_helpers.S ...
uberspark >> [docker] plat/common/aarch32/platform_helpers.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/compiler-rt/builtins/arm/aeabi_ldivmod.S ...
uberspark >> [docker] lib/compiler-rt/builtins/arm/aeabi_ldivmod.S:10:25: fatal error: ../assembly.h: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/compiler-rt/builtins/arm/aeabi_uldivmod.S ...
uberspark >> [docker] lib/compiler-rt/builtins/arm/aeabi_uldivmod.S:10:25: fatal error: ../assembly.h: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling drivers/st/uart/aarch32/stm32_console.S ...
uberspark >> [docker] drivers/st/uart/aarch32/stm32_console.S:7:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/xlat_tables_v2/aarch32/enable_mmu.S ...
uberspark >> [docker] lib/xlat_tables_v2/aarch32/enable_mmu.S:8:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/cpus/aarch32/cortex_a7.S ...
uberspark >> [docker] lib/cpus/aarch32/cortex_a7.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling bl32/sp_min/aarch32/entrypoint.S ...
uberspark >> [docker] bl32/sp_min/aarch32/entrypoint.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/el3_runtime/aarch32/cpu_data.S ...
uberspark >> [docker] lib/el3_runtime/aarch32/cpu_data.S:8:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/psci/aarch32/psci_helpers.S ...
uberspark >> [docker] lib/psci/aarch32/psci_helpers.S:8:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling plat/common/aarch32/platform_mp_stack.S ...
uberspark >> [docker] plat/common/aarch32/platform_mp_stack.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/aarch32/cache_helpers.S ...
uberspark >> [docker] lib/aarch32/cache_helpers.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling lib/aarch32/misc_helpers.S ...
uberspark >> [docker] lib/aarch32/misc_helpers.S:9:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> [docker] Compiling stm32mp1.S ...
uberspark >> [docker] stm32mp1.S: Assembler messages:
uberspark >> [docker] stm32mp1.S:13: Error: missing string
uberspark >> [docker] stm32mp1.S:16: Error: missing string
uberspark >> [docker] Compiling stm32mp1_helper.S ...
uberspark >> [docker] stm32mp1_helper.S:11:77: fatal error: uberspark/uobjcoll/platform/st/stm32mp1/main/include/asm_macros.S: No such file or directory
uberspark >> [docker] compilation terminated.
uberspark >> ERROR: could not compile one or more uobj asm files!
 
uberspark >> loading cc-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0/uberspark.json
uberspark >> loaded cc_bridge settings
uberspark >> building cc-bridge: uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0
uberspark >> [docker] Sending build context to Docker daemon  20.48kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-5-arm-linux-gnueabihf     	    	 	 gcc-5-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ccea1428b380
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7aa0b3057c92
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 608a6d8ccf1a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 96d5263e3746
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8b2efa26c060
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 30c0ba6c77da
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 40d0be8877c0
uberspark >> [docker] Successfully built 40d0be8877c0
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/cc-bridge/armv8_32/generic/gcc/v5.4.0:latest
uberspark >> cc_bridge build success
uberspark >> loading as-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1/uberspark.json
uberspark >> loaded as_bridge settings
uberspark >> building as-bridge: uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.97kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&    apt-get clean && rm -rf /var/lib/apt/lists/* &&    ln -s /usr/bin/arm-linux-gnueabihf-gcc /usr/bin/gcc
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 48156cb48fcc
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aa5d124d445c
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dce23951461b
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e34b715aedf1
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f57d0a45bf02
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 95e6f2bea157
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bef67965fdc9
uberspark >> [docker] Successfully built bef67965fdc9
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/armv8_32/generic/gnu-as/v2.26.1:latest
uberspark >> as_bridge build success
uberspark >> loading casm-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest/uberspark.json
uberspark >> loaded casm as_bridge settings
uberspark >> building casm-bridge: uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest
uberspark >> [docker] Sending build context to Docker daemon  23.55kB
uberspark >> [docker] Step 1/42 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/42 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/42 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/42 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/42 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/42 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/42 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/42 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/42 : ENV archive_name=compcert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ac2929f7da6e
uberspark >> [docker] Step 11/42 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         opam         wget         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         binutils         curl         rsync         git         make         m4         patch         unzip         gawk         findutils
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a3fd636caaf5
uberspark >> [docker] Step 12/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 83188c226e81
uberspark >> [docker] Step 13/42 : RUN wget http://compcert.inria.fr/release/${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6b48b59ccc2e
uberspark >> [docker] Step 14/42 : RUN mv compcert-3.7.tgz /home/uberspark/CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> da5fc2905de2
uberspark >> [docker] Step 15/42 : ENV archive_name=CompCert-3.7.tgz
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9650dd055bcc
uberspark >> [docker] Step 16/42 : COPY compiler_script.sh /home/uberspark/
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 38228d6a284f
uberspark >> [docker] Step 17/42 : RUN cd /home/uberspark/ &&    chmod 755 compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b0cffb935df2
uberspark >> [docker] Step 18/42 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fcfa16e362ad
uberspark >> [docker] Step 19/42 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ae70b476d692
uberspark >> [docker] Step 20/42 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> cdf642b1de1d
uberspark >> [docker] Step 21/42 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d2fd19bf5d05
uberspark >> [docker] Step 22/42 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4d869469db75
uberspark >> [docker] Step 23/42 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0c522d7c1d16
uberspark >> [docker] Step 24/42 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7cb1c5406b33
uberspark >> [docker] Step 25/42 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1375a63660a
uberspark >> [docker] Step 26/42 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> efe85dfa9114
uberspark >> [docker] Step 27/42 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec611e3e585c
uberspark >> [docker] Step 28/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 257cf423b905
uberspark >> [docker] Step 29/42 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y coq=8.8.0 &&    opam install -y coq=8.8.0 &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 092d9362ff7a
uberspark >> [docker] Step 30/42 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9d4c3a749e16
uberspark >> [docker] Step 31/42 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c0e916640425
uberspark >> [docker] Step 32/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 39fc20f5489c
uberspark >> [docker] Step 33/42 : WORKDIR /home/uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5486d9630712
uberspark >> [docker] Step 34/42 : RUN echo $archive_name
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 2a588a28202b
uberspark >> [docker] Step 35/42 : RUN tar -xzf ${archive_name}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4569a9ecc81
uberspark >> [docker] Step 36/42 : RUN . ./compiler_script.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> dec1042c33a4
uberspark >> [docker] Step 37/42 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af2e3cc4f9f0
uberspark >> [docker] Step 38/42 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> f3101b81544b
uberspark >> [docker] Step 39/42 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 56a7fa2d4b50
uberspark >> [docker] Step 40/42 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 993c5dc02031
uberspark >> [docker] Step 41/42 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4f615640493b
uberspark >> [docker] Step 42/42 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 85347dcd1694
uberspark >> [docker] Successfully built 85347dcd1694
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/as-bridge/x86_32/generic/casm/vlatest:latest
uberspark >> casm as_bridge build success
uberspark >> loading ld-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1/uberspark.json
uberspark >> loaded ld_bridge settings
uberspark >> building ld-bridge: uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1
uberspark >> [docker] Sending build context to Docker daemon  19.46kB
uberspark >> [docker] Step 1/16 : FROM amd64/ubuntu:16.04
uberspark >> [docker]  ---> 9499db781771
uberspark >> [docker] Step 2/16 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>, Matt McCormack <matthew.mccormack@live.com>" author="Matt McCormack <matthew.mccormack@live.com>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ec7d47befd51
uberspark >> [docker] Step 3/16 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a6831f57fd06
uberspark >> [docker] Step 4/16 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3125b949929e
uberspark >> [docker] Step 5/16 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b28ffd71f55a
uberspark >> [docker] Step 6/16 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 43d1d45546c1
uberspark >> [docker] Step 7/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9f2bc387e9c0
uberspark >> [docker] Step 8/16 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 4b1f555252cb
uberspark >> [docker] Step 9/16 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> ed5c77ccdc42
uberspark >> [docker] Step 10/16 : RUN apt-get update &&    apt-get -yqq install gcc-arm-linux-gnueabihf     	    	 	 gcc-multilib-arm-linux-gnueabihf 			 binutils-arm-linux-gnueabihf &&     apt-get clean && rm -rf /var/lib/apt/lists/*
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 785c0e03fb44
uberspark >> [docker] Step 11/16 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 985aab90b90d
uberspark >> [docker] Step 12/16 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0be41e37ae9a
uberspark >> [docker] Step 13/16 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 21d30f366b9d
uberspark >> [docker] Step 14/16 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8c57dcc44d18
uberspark >> [docker] Step 15/16 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> aea3a1b5e363
uberspark >> [docker] Step 16/16 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 53eec3c85adc
uberspark >> [docker] Successfully built 53eec3c85adc
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/ld-bridge/armv8_32/generic/gnu-ld/v2.26.1:latest
uberspark >> ld_bridge build success
uberspark >> loading vf-bridge settings from file: /home/yeeb16/uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0/uberspark.json
uberspark >> loaded uberspark vf_bridge settings
uberspark >> building vf-bridge: uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0
uberspark >> [docker] Sending build context to Docker daemon   21.5kB
uberspark >> [docker] Step 1/31 : FROM amd64/ubuntu:20.04 AS base
uberspark >> [docker]  ---> f643c72bc252
uberspark >> [docker] Step 2/31 : LABEL maintainer="Amit Vasudevan <amitvasudevan@acm.org>" author="Amit Vasudevan <amitvasudevan@acm.org>"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> af45a5f4b984
uberspark >> [docker] Step 3/31 : ENV DEBIAN_FRONTEND=noninteractive
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 208cf403e082
uberspark >> [docker] Step 4/31 : ENV D_CMD=/bin/bash
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 0874541bbdf4
uberspark >> [docker] Step 5/31 : ENV D_UID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 23bf6acafab5
uberspark >> [docker] Step 6/31 : ENV D_GID=1000
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> d8d563828d2c
uberspark >> [docker] Step 7/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> bbbcc5512af6
uberspark >> [docker] Step 8/31 : RUN apt-get update -y &&    apt-get install -y --no-install-recommends apt-utils &&    apt-get install -y sudo &&    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e4cf93e69474
uberspark >> [docker] Step 9/31 : RUN addgroup --system uberspark &&    adduser --system --disabled-password --ingroup uberspark uberspark &&    usermod -aG sudo uberspark &&    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 3bb6a3cdbbbd
uberspark >> [docker] Step 10/31 : RUN apt-get update -y &&     apt-get install -y         git         build-essential         gcc-8         gcc-8-multilib-arm-linux-gnueabihf         gcc-8-multilib-x86-64-linux-gnux32         gcc-8-multilib         opam
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e0f3c81ab0da
uberspark >> [docker] Step 11/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a8e4a0faf9d5
uberspark >> [docker] Step 12/31 : RUN wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 5b0840091420
uberspark >> [docker] Step 13/31 : RUN cp ./cvc4-1.8-x86_64-linux-opt /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fc0d2984a814
uberspark >> [docker] Step 14/31 : RUN chmod +x /usr/local/bin/cvc4
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 6c8c044d30d7
uberspark >> [docker] Step 15/31 : RUN cvc4 --version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> c23fff1cb534
uberspark >> [docker] Step 16/31 : RUN wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.9/z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e463f9a24b75
uberspark >> [docker] Step 17/31 : RUN unzip z3-4.8.9-x64-ubuntu-16.04.zip
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> b55b47a2face
uberspark >> [docker] Step 18/31 : RUN cp z3-4.8.9-x64-ubuntu-16.04/bin/z3 /usr/local/bin
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 9a6c04cf246e
uberspark >> [docker] Step 19/31 : RUN chmod +x /usr/local/bin/z3
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> e750690aabbc
uberspark >> [docker] Step 20/31 : RUN z3 -version
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7e60a9afa0e3
uberspark >> [docker] Step 21/31 : USER uberspark
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 25183e7f992f
uberspark >> [docker] Step 22/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 1162314893dd
uberspark >> [docker] Step 23/31 : RUN opam init -a --comp=4.09.0+flambda --disable-sandboxing &&     eval $(opam env) &&     opam install -y depext &&    opam depext -y why3 &&    opam install -y why3 &&    opam depext -y alt-ergo &&    opam install -y alt-ergo &&    opam depext -y frama-c.20.0 &&    opam install -y frama-c.20.0
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8ebc7f8a47ec
uberspark >> [docker] Step 24/31 : RUN eval $(opam env) &&     opam depext -y fileutils.0.6.1 &&    opam install -y fileutils.0.6.1
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 8bbf8c42c37e
uberspark >> [docker] Step 25/31 : RUN eval $(opam env) &&     why3 config --detect &&     why3 --list-provers
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 63f8e61a3eb9
uberspark >> [docker] Step 26/31 : USER root
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> a1a0bb4af76b
uberspark >> [docker] Step 27/31 : WORKDIR "/home/uberspark"
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> fe987acc8322
uberspark >> [docker] Step 28/31 : RUN chmod ugo+rwx -R .
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 311036dc4884
uberspark >> [docker] Step 29/31 : COPY common/container/amd64/docker-entrypoint-ubuntu.sh /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 7b4d89e6d54e
uberspark >> [docker] Step 30/31 : RUN chmod +x /docker-entrypoint-ubuntu.sh
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 90a362c51011
uberspark >> [docker] Step 31/31 : CMD /docker-entrypoint-ubuntu.sh ${D_UID} ${D_GID} ${D_CMD}
uberspark >> [docker]  ---> Using cache
uberspark >> [docker]  ---> 47e34a7d99ca
uberspark >> [docker] Successfully built 47e34a7d99ca
uberspark >> [docker] Successfully tagged uberspark/bridges/container/amd64/vf-bridge/generic/generic/uberspark/v6.0.0:latest
uberspark >> uberspark vf_bridge build success
uberspark >> ERROR: could not build uobj(s)!
 
Makefile:8: recipe for target 'all' failed
